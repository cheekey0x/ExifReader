{"version":3,"sources":["webpack://ExifReader/webpack/universalModuleDefinition","webpack://ExifReader/webpack/bootstrap","webpack://ExifReader/./src/tag-names-utils.js","webpack://ExifReader/./src/byte-order.js","webpack://ExifReader/./src/utils.js","webpack://ExifReader/./src/errors.js","webpack://ExifReader/./src/xmp-tag-names.js","webpack://ExifReader/./src/xmp-tags.js","webpack://ExifReader/./src/iptc-tag-names.js","webpack://ExifReader/./src/iptc-tags.js","webpack://ExifReader/./src/tag-names-interoperability-ifd.js","webpack://ExifReader/./src/tag-names-gps-ifd.js","webpack://ExifReader/./src/tag-names-exif-ifd.js","webpack://ExifReader/./src/tag-names-0th-ifd.js","webpack://ExifReader/./src/tag-names.js","webpack://ExifReader/./src/types.js","webpack://ExifReader/./src/tags.js","webpack://ExifReader/./src/image-header.js","webpack://ExifReader/./src/exif-reader.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getStringValue","map","charCode","String","fromCharCode","join","getEncodedString","length","encoding","slice","getCharacterArray","string","split","character","charCodeAt","LITTLE_ENDIAN","BIG_ENDIAN","getByteOrder","dataView","tiffHeaderOffset","getUint16","Error","getStringFromDataView","offset","chars","byteLength","push","getUint8","charArray","MetadataMissingError","message","stack","calculateGPSValue","_value$split","_value$split2","_slicedToArray","degreesString","minutesString","undefined","degrees","parseFloat","minutes","ref","charAt","Number","isNaN","tiff:Orientation","exif:GPSLatitude","exif:GPSLongitude","convertToObject","node","nodes","isTopNode","arguments","childNodes","elements","getChildNodes","nodeName","nodeValue","getTextValue","forEach","isElement","nodeElement","attributes","element","getAttributes","getElementFromNode","Array","isArray","getElementsFromNodes","parseXMPObject","xmpObject","tags","assign","parseNodeAttributesAsTags","_typeof","parseNodeChildrenAsTags","isTagAttribute","getLocalName","description","getDescription","isNamespaceDefinition","item","getDescriptionOfArray","descriptions","getClearTextKey","getDescriptionOfObject","XmpTagNames","decodeURIComponent","escape","error","children","parseNodeAsTag","hasNestedSimpleRdfDescription","parseNodeAsSimpleRdfDescription","hasNestedStructureRdfDescription","tag","parseNodeAttributes","parseNodeAsStructureRdfDescription","keys","isCompactStructure","parseNodeAsCompactStructure","getArrayChild","items","parseArrayValue","parseNodeAsArray","getURIValue","parseNodeAsSimpleValue","parseNodeChildrenAsAttributes","parseRdfValue","read","dataOffset","metadataSize","doc","DOMParser","console","warn","domParser","xmlSource","_utils","parseFromString","documentElement","getDocument","rdf","getRDF","tagName","getCreationDate","date","_tagNamesUtils","substr","getCreationTime","time","parsedTime","iptc","346","512","toString","515","516","517","519","520","522","524","repeatable","parts","527","532","534","537","538","539","542","547","549","550","552","554","557","559","562","567","572","574","575","577","582","587","592","597","602","604","607","612","613","615","617","622","627","628","630","632","634","637","642","643","647","662","stringValue","character0","character1","663","parseInt","664","bits","665","duration","666","712","713","formatVersions","00","01","02","03","04","05","06","11","20","21","objectDataPreviewFileFormat","714","BYTES_8BIM","BYTES_8BIM_SIZE","RESOURCE_BLOCK_HEADER_SIZE","NAA_RESOURCE_BLOCK_TYPE","TAG_HEADER_SIZE","getResourceBlock","getUint32","type","size","isNaaResourceBlock","resourceBlock","getBlockPadding","readTag","tagCode","tagSize","tagValue","valueIndex","getTagValue","IptcTagNames","tagDescription","asciiValue","decodeAsciiValue","_getNaaResourceBlock","naaBlock","getNaaResourceBlock","newDataOffset","endOfBlockOffset","_readTag","parseTags","1","0","2","3","4","5","6","7","num","8","9","status","10","12","13","14","15","16","17","18","19","22","23","24","25","26","27","28","29","30","33434","33437","34850","34852","34855","34856","36864","36867","36868","37121","37122","37377","37378","37379","37380","37381","37382","37383","37384","37385","37386","37396","37500","37510","37520","37521","37522","40960","40961","40962","40963","40964","40965","41483","41484","41486","41487","41488","41492","_ref","_ref2","x","y","41493","41495","41728","41729","41730","41985","41986","41987","41988","41989","41990","41991","41992","41993","41994","41995","41996","42016","256","257","258","259","262","270","271","272","273","274","277","278","279","282","283","284","296","301","305","306","315","318","319","513","514","529","530","531","33432","34665","34853","0th","TagNames0thIfd","exif","TagNamesExifIfd","gps","TagNamesGpsIfd","interoperability","TagNamesInteroperabilityIfd","typeSizes","tagTypes","BYTE","ASCII","SHORT","LONG","RATIONAL","UNDEFINED","SLONG","SRATIONAL","getByteAt","getLongAt","byteOrder","ByteOrder","getSlongAt","getInt32","getAsciiValue","getAsciiAt","getShortAt","getRationalAt","getUndefinedAt","getSrationalAt","getTypeSize","typeName","EXIF_IFD_POINTER_KEY","GPS_INFO_IFD_POINTER_KEY","INTEROPERABILITY_IFD_POINTER_KEY","getTagValueAt","Types","read0thIfd","readIfd","get0thIfdOffset","ifdType","FIELD_COUNT_SIZE","numberOfFields","fieldIndex","TAG_TYPE_OFFSET","TAG_COUNT_OFFSET","TAG_VALUE_OFFSET","tagType","tagCount","tagValueFitsInOffsetSlot","tagValueOffset","tagValueFitsInDataView","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","next","done","err","return","splitNullSeparatedAsciiString","TagNames","count","readInteroperabilityIfd","readGpsIfd","readExifIfd","MIN_DATA_BUFFER_LENGTH","JPEG_ID","JPEG_ID_SIZE","APP_ID_OFFSET","APP_MARKER_SIZE","TIFF_HEADER_OFFSET","IPTC_DATA_OFFSET","XMP_DATA_OFFSET","APP0_MARKER","APP1_MARKER","APP13_MARKER","APP15_MARKER","COMMENT_MARKER","APP1_EXIF_IDENTIFIER","APP1_XMP_IDENTIFIER","APP13_IPTC_IDENTIFIER","isApp1ExifMarker","appMarkerPosition","markerIdLength","isApp1XMPMarker","isApp13PhotoshopMarker","isAppMarker","appMarker","check","parseAppMarkers","fieldLength","iptcDataOffset","xmpDataOffset","xmpFieldLength","hasAppMarkers","load","loadView","data","options","expanded","DataView","foundMetaData","ImageHeader","_ImageHeader$parseApp","hasExifData","readTags","Tags","hasIptcData","IptcTags","hasXmpData","XmpTags","xmp","exifErrors","errors"],"mappings":"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","file":"exif-reader.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ExifReader\"] = factory();\n\telse\n\t\troot[\"ExifReader\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport function getStringValue(value) {\n    return value.map((charCode) => String.fromCharCode(charCode)).join('');\n}\n\nexport function getEncodedString(value) {\n    if (value.length >= 8) {\n        const encoding = getStringValue(value.slice(0, 8));\n\n        if (encoding === 'ASCII\\x00\\x00\\x00') {\n            return getStringValue(value.slice(8));\n        } else if (encoding === 'JIS\\x00\\x00\\x00\\x00\\x00') {\n            return '[JIS encoded text]';\n        } else if (encoding === 'UNICODE\\x00') {\n            return '[Unicode encoded text]';\n        } else if (encoding === '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00') {\n            return '[Undefined encoding]';\n        }\n    }\n\n    return 'Undefined';\n}\n\nexport function getCharacterArray(string) {\n    return string.split('').map((character) => character.charCodeAt(0));\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nconst LITTLE_ENDIAN = 0x4949;\nconst BIG_ENDIAN = 0x4d4d;\n\nexport default {\n    BIG_ENDIAN,\n    LITTLE_ENDIAN,\n    getByteOrder\n};\n\nfunction getByteOrder(dataView, tiffHeaderOffset) {\n    if (dataView.getUint16(tiffHeaderOffset) === LITTLE_ENDIAN) {\n        return LITTLE_ENDIAN;\n    } else if (dataView.getUint16(tiffHeaderOffset) === BIG_ENDIAN) {\n        return BIG_ENDIAN;\n    }\n    throw new Error('Illegal byte order value. Faulty image.');\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport function getStringFromDataView(dataView, offset, length) {\n    const chars = [];\n    for (let i = 0; i < length && offset + i < dataView.byteLength; i++) {\n        chars.push(dataView.getUint8(offset + i, false));\n    }\n    return getAsciiValue(chars).join('');\n}\n\nfunction getAsciiValue(charArray) {\n    return charArray.map((charCode) => String.fromCharCode(charCode));\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n/**\n * Thrown when no Exif metadata was found for the given image.\n *\n * @param {string} message The error message.\n */\nfunction MetadataMissingError(message) {\n    this.name = 'MetadataMissingError';\n    this.message = message || 'No Exif data';\n    this.stack = (new Error()).stack;\n}\n\nMetadataMissingError.prototype = new Error;\n\nexport default {\n    MetadataMissingError,\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    'tiff:Orientation'(value) {\n        if (value === '1') {\n            return 'Horizontal (normal)';\n        }\n        if (value === '2') {\n            return 'Mirror horizontal';\n        }\n        if (value === '3') {\n            return 'Rotate 180';\n        }\n        if (value === '4') {\n            return 'Mirror vertical';\n        }\n        if (value === '5') {\n            return 'Mirror horizontal and rotate 270 CW';\n        }\n        if (value === '6') {\n            return 'Rotate 90 CW';\n        }\n        if (value === '7') {\n            return 'Mirror horizontal and rotate 90 CW';\n        }\n        if (value === '8') {\n            return 'Rotate 270 CW';\n        }\n        return value;\n    },\n    'exif:GPSLatitude': calculateGPSValue,\n    'exif:GPSLongitude': calculateGPSValue\n};\n\nfunction calculateGPSValue(value) {\n    const [degreesString, minutesString] = value.split(',');\n    if ((degreesString !== undefined) && (minutesString !== undefined)) {\n        const degrees = parseFloat(degreesString);\n        const minutes = parseFloat(minutesString);\n        const ref = minutesString.charAt(minutesString.length - 1);\n        if ((!Number.isNaN(degrees)) && (!Number.isNaN(minutes))) {\n            return '' + (degrees + minutes / 60) + ref;\n        }\n    }\n    return value;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils';\nimport XmpTagNames from './xmp-tag-names';\n\nexport default {\n    read\n};\n\nfunction read(dataView, dataOffset, metadataSize) {\n    try {\n        const doc = getDocument(dataView, dataOffset, metadataSize);\n        const rdf = getRDF(doc);\n\n        return parseXMPObject(convertToObject(rdf, true));\n    } catch (error) {\n        return {};\n    }\n}\n\nfunction getDocument(dataView, dataOffset, metadataSize) {\n    if (typeof DOMParser === 'undefined') {\n        console.warn('Warning: DOMParser is not available. If you\\'re using Node.js you probably want to do this:\\n  1. Install a DOM parser, e.g. xmldom: npm install --save xmldom\\n  2. Require that at the top of your script: global.DOMParser = require(\\'xmldom\\').DOMParser;\\nSee an example of this in the ExifReader example directory.'); // eslint-disable-line no-console\n        throw new Error();\n    }\n\n    const domParser = new DOMParser();\n    const xmlSource = getStringFromDataView(dataView, dataOffset, metadataSize);\n    const doc = domParser.parseFromString(xmlSource, 'application/xml');\n\n    if (doc.documentElement.nodeName === 'parsererror') {\n        throw new Error();\n    }\n\n    return doc;\n}\n\nfunction getRDF(node) {\n    for (let i = 0; i < node.childNodes.length; i++) {\n        if (node.childNodes[i].tagName === 'x:xmpmeta') {\n            return getRDF(node.childNodes[i]);\n        }\n        if (node.childNodes[i].tagName === 'rdf:RDF') {\n            return node.childNodes[i];\n        }\n    }\n\n    throw new Error();\n}\n\nfunction convertToObject(node, isTopNode = false) {\n    const childNodes = getChildNodes(node);\n\n    if (hasTextOnlyContent(childNodes)) {\n        if (isTopNode) {\n            return {};\n        }\n        return getTextValue(childNodes[0]);\n    }\n\n    return getElementsFromNodes(childNodes);\n}\n\nfunction getChildNodes(node) {\n    const elements = [];\n\n    for (let i = 0; i < node.childNodes.length; i++) {\n        elements.push(node.childNodes[i]);\n    }\n\n    return elements;\n}\n\nfunction hasTextOnlyContent(nodes) {\n    return (nodes.length === 1) && (nodes[0].nodeName === '#text');\n}\n\nfunction getTextValue(node) {\n    return node.nodeValue;\n}\n\nfunction getElementsFromNodes(nodes) {\n    const elements = {};\n\n    nodes.forEach((node) => {\n        if (isElement(node)) {\n            const nodeElement = getElementFromNode(node);\n\n            if (elements[node.nodeName] !== undefined) {\n                if (!Array.isArray(elements[node.nodeName])) {\n                    elements[node.nodeName] = [elements[node.nodeName]];\n                }\n                elements[node.nodeName].push(nodeElement);\n            } else {\n                elements[node.nodeName] = nodeElement;\n            }\n        }\n    });\n\n    return elements;\n}\n\nfunction isElement(node) {\n    return (node.nodeName) && (node.nodeName !== '#text');\n}\n\nfunction getElementFromNode(node) {\n    return {\n        attributes: getAttributes(node),\n        value: convertToObject(node)\n    };\n}\n\nfunction getAttributes(element) {\n    const attributes = {};\n\n    for (let i = 0; i < element.attributes.length; i++) {\n        attributes[element.attributes[i].nodeName] = element.attributes[i].value;\n    }\n\n    return attributes;\n}\n\nfunction parseXMPObject(xmpObject) {\n    const tags = {};\n\n    if (typeof xmpObject === 'string') {\n        return xmpObject;\n    }\n\n    for (const nodeName in xmpObject) {\n        let nodes = xmpObject[nodeName];\n\n        if (!Array.isArray(nodes)) {\n            nodes = [nodes];\n        }\n\n        nodes.forEach((node) => {\n            Object.assign(tags, parseNodeAttributesAsTags(node.attributes));\n            if (typeof node.value === 'object') {\n                Object.assign(tags, parseNodeChildrenAsTags(node.value));\n            }\n        });\n    }\n\n    return tags;\n}\n\nfunction parseNodeAttributesAsTags(attributes) {\n    const tags = {};\n\n    for (const name in attributes) {\n        if (isTagAttribute(name)) {\n            tags[getLocalName(name)] = {\n                value: attributes[name],\n                attributes: {},\n                description: getDescription(attributes[name], name)\n            };\n        }\n    }\n\n    return tags;\n}\n\nfunction isTagAttribute(name) {\n    return (name !== 'rdf:parseType') && (!isNamespaceDefinition(name));\n}\n\nfunction isNamespaceDefinition(name) {\n    return name.split(':')[0] === 'xmlns';\n}\n\nfunction getLocalName(name) {\n    return name.split(':')[1];\n}\n\nfunction getDescription(value, name = undefined) {\n    if (Array.isArray(value)) {\n        return getDescriptionOfArray(value);\n    }\n    if (typeof value === 'object') {\n        return getDescriptionOfObject(value);\n    }\n\n    try {\n        if ((name) && (typeof XmpTagNames[name] === 'function')) {\n            return XmpTagNames[name](value);\n        }\n        return decodeURIComponent(escape(value));\n    } catch (error) {\n        return value;\n    }\n}\n\nfunction getDescriptionOfArray(value) {\n    return value.map((item) => {\n        if (item.value !== undefined) {\n            return getDescription(item.value);\n        }\n        return getDescription(item);\n    }).join(', ');\n}\n\nfunction getDescriptionOfObject(value) {\n    const descriptions = [];\n\n    for (const key in value) {\n        descriptions.push(`${getClearTextKey(key)}: ${value[key].value}`);\n    }\n\n    return descriptions.join('; ');\n}\n\nfunction getClearTextKey(key) {\n    if (key === 'CiAdrCity') {\n        return 'CreatorCity';\n    }\n    if (key === 'CiAdrCtry') {\n        return 'CreatorCountry';\n    }\n    if (key === 'CiAdrExtadr') {\n        return 'CreatorAddress';\n    }\n    if (key === 'CiAdrPcode') {\n        return 'CreatorPostalCode';\n    }\n    if (key === 'CiAdrRegion') {\n        return 'CreatorRegion';\n    }\n    if (key === 'CiEmailWork') {\n        return 'CreatorWorkEmail';\n    }\n    if (key === 'CiTelWork') {\n        return 'CreatorWorkPhone';\n    }\n    if (key === 'CiUrlWork') {\n        return 'CreatorWorkUrl';\n    }\n    return key;\n}\n\nfunction parseNodeChildrenAsTags(children) {\n    const tags = {};\n\n    for (const name in children) {\n        if (!isNamespaceDefinition(name)) {\n            tags[getLocalName(name)] = parseNodeAsTag(children[name], name);\n        }\n    }\n\n    return tags;\n}\n\nfunction parseNodeAsTag(node, name) {\n    if (hasNestedSimpleRdfDescription(node)) {\n        return parseNodeAsSimpleRdfDescription(node, name);\n    } else if (hasNestedStructureRdfDescription(node)) {\n        return parseNodeAsStructureRdfDescription(node, name);\n    } else if (isCompactStructure(node)) {\n        return parseNodeAsCompactStructure(node, name);\n    } else if (isArray(node)) {\n        return parseNodeAsArray(node, name);\n    }\n    return parseNodeAsSimpleValue(node, name);\n}\n\nfunction hasNestedSimpleRdfDescription(node) {\n    return ((node.attributes['rdf:parseType'] === 'Resource') && (node.value['rdf:value'] !== undefined))\n        || ((node.value['rdf:Description'] !== undefined) && (node.value['rdf:Description'].value['rdf:value'] !== undefined));\n}\n\nfunction parseNodeAsSimpleRdfDescription(node, name) {\n    const attributes = parseNodeAttributes(node);\n\n    if (node.value['rdf:Description'] !== undefined) {\n        node = node.value['rdf:Description'];\n    }\n\n    Object.assign(attributes, parseNodeAttributes(node), parseNodeChildrenAsAttributes(node));\n\n    const value = parseRdfValue(node);\n\n    return {\n        value,\n        attributes,\n        description: getDescription(value, name)\n    };\n}\n\nfunction parseNodeAttributes(node) {\n    const attributes = {};\n\n    for (const name in node.attributes) {\n        if ((name !== 'rdf:parseType') && (name !== 'rdf:resource') && (!isNamespaceDefinition(name))) {\n            attributes[getLocalName(name)] = node.attributes[name];\n        }\n    }\n\n    return attributes;\n}\n\nfunction parseNodeChildrenAsAttributes(node) {\n    const attributes = {};\n\n    for (const name in node.value) {\n        if ((name !== 'rdf:value') && (!isNamespaceDefinition(name))) {\n            attributes[getLocalName(name)] = node.value[name].value;\n        }\n    }\n\n    return attributes;\n}\n\nfunction parseRdfValue(node) {\n    return getURIValue(node.value['rdf:value']) || node.value['rdf:value'].value;\n}\n\nfunction hasNestedStructureRdfDescription(node) {\n    return (node.attributes['rdf:parseType'] === 'Resource')\n        || ((node.value['rdf:Description'] !== undefined) && (node.value['rdf:Description'].value['rdf:value'] === undefined));\n}\n\nfunction parseNodeAsStructureRdfDescription(node, name) {\n    const tag = {\n        value: {},\n        attributes: {}\n    };\n\n    if (node.value['rdf:Description'] !== undefined) {\n        Object.assign(tag.value, parseNodeAttributesAsTags(node.value['rdf:Description'].attributes));\n        Object.assign(tag.attributes, parseNodeAttributes(node));\n        node = node.value['rdf:Description'];\n    }\n\n    Object.assign(tag.value, parseNodeChildrenAsTags(node.value));\n\n    tag.description = getDescription(tag.value, name);\n\n    return tag;\n}\n\nfunction isCompactStructure(node) {\n    return (Object.keys(node.value).length === 0)\n        && (node.attributes['rdf:resource'] === undefined);\n}\n\nfunction parseNodeAsCompactStructure(node, name) {\n    const value = parseNodeAttributesAsTags(node.attributes);\n\n    return {\n        value,\n        attributes: {},\n        description: getDescription(value, name)\n    };\n}\n\nfunction isArray(node) {\n    return getArrayChild(node.value) !== undefined;\n}\n\nfunction getArrayChild(value) {\n    return value['rdf:Bag'] || value['rdf:Seq'] || value['rdf:Alt'];\n}\n\nfunction parseNodeAsArray(node, name) {\n    let items = getArrayChild(node.value).value['rdf:li'];\n    const attributes = parseNodeAttributes(node);\n    const value = [];\n\n    if (!Array.isArray(items)) {\n        items = [items];\n    }\n\n    items.forEach((item) => {\n        value.push(parseArrayValue(item));\n    });\n\n    return {\n        value,\n        attributes,\n        description: getDescription(value, name)\n    };\n}\n\nfunction parseArrayValue(item) {\n    if (hasNestedSimpleRdfDescription(item)) {\n        return parseNodeAsSimpleRdfDescription(item);\n    }\n\n    if (hasNestedArrayValue(item)) {\n        return parseNodeChildrenAsTags(item.value);\n    }\n\n    return {\n        value: item.value,\n        attributes: parseNodeAttributes(item),\n        description: getDescription(item.value)\n    };\n}\n\nfunction hasNestedArrayValue(node) {\n    return node.attributes['rdf:parseType'] === 'Resource';\n}\n\nfunction parseNodeAsSimpleValue(node, name) {\n    const value = getURIValue(node) || parseXMPObject(node.value);\n\n    return {\n        value,\n        attributes: parseNodeAttributes(node),\n        description: getDescription(value, name)\n    };\n}\n\nfunction getURIValue(node) {\n    return node.attributes && node.attributes['rdf:resource'];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue} from './tag-names-utils';\n\nexport default {\n    'iptc': {\n        0x015a: {\n            'name': 'Coded Character Set',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === '\\x1b%G') {\n                    return 'UTF-8';\n                } else if (string === '\\x1b%/G') {\n                    return 'UTF-8 Level 1';\n                } else if (string === '\\x1b%/H') {\n                    return 'UTF-8 Level 2';\n                } else if (string === '\\x1b%/I') {\n                    return 'UTF-8 Level 3';\n                }\n                return 'Unknown';\n            }\n        },\n        0x0200: {\n            'name': 'Record Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0203: 'Object Type Reference',\n        0x0204: 'Object Attribute Reference',\n        0x0205: 'Object Name',\n        0x0207: 'Edit Status',\n        0x0208: {\n            'name': 'Editorial Update',\n            'description': (value) => {\n                if (getStringValue(value) === '01') {\n                    return 'Additional Language';\n                }\n                return 'Unknown';\n            }\n        },\n        0x020a: 'Urgency',\n        0x020c: {\n            'name': 'Subject Reference',\n            'repeatable': true,\n            'description': (value) => {\n                const parts = getStringValue(value).split(':');\n                return parts[2] + (parts[3] ? '/' + parts[3] : '') + (parts[4] ? '/' + parts[4] : '');\n            }\n        },\n        0x020f: 'Category',\n        0x0214: {\n            'name': 'Supplemental Category',\n            'repeatable': true\n        },\n        0x0216: 'Fixture Identifier',\n        0x0219: {\n            'name': 'Keywords',\n            'repeatable': true\n        },\n        0x021a: {\n            'name': 'Content Location Code',\n            'repeatable': true\n        },\n        0x021b: {\n            'name': 'Content Location Name',\n            'repeatable': true\n        },\n        0x021e: 'Release Date',\n        0x0223: 'Release Time',\n        0x0225: 'Expiration Date',\n        0x0226: 'Expiration Time',\n        0x0228: 'Special Instructions',\n        0x022a: {\n            'name': 'Action Advised',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === '01') {\n                    return 'Object Kill';\n                } else if (string === '02') {\n                    return 'Object Replace';\n                } else if (string === '03') {\n                    return 'Object Append';\n                } else if (string === '04') {\n                    return 'Object Reference';\n                }\n                return 'Unknown';\n            }\n        },\n        0x022d: {\n            'name': 'Reference Service',\n            'repeatable': true\n        },\n        0x022f: {\n            'name': 'Reference Date',\n            'repeatable': true\n        },\n        0x0232: {\n            'name': 'Reference Number',\n            'repeatable': true\n        },\n        0x0237: {\n            'name': 'Date Created',\n            'description': getCreationDate\n        },\n        0x023c: {\n            'name': 'Time Created',\n            'description': getCreationTime\n        },\n        0x023e: {\n            'name': 'Digital Creation Date',\n            'description': getCreationDate\n        },\n        0x023f: {\n            'name': 'Digital Creation Time',\n            'description': getCreationTime\n        },\n        0x0241: 'Originating Program',\n        0x0246: 'Program Version',\n        0x024b: {\n            'name': 'Object Cycle',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === 'a') {\n                    return 'morning';\n                } else if (string === 'p') {\n                    return 'evening';\n                } else if (string === 'b') {\n                    return 'both';\n                }\n                return 'Unknown';\n            }\n        },\n        0x0250: {\n            'name': 'By-line',\n            'repeatable': true\n        },\n        0x0255: {\n            'name': 'By-line Title',\n            'repeatable': true\n        },\n        0x025a: 'City',\n        0x025c: 'Sub-location',\n        0x025f: 'Province/State',\n        0x0264: 'Country/Primary Location Code',\n        0x0265: 'Country/Primary Location Name',\n        0x0267: 'Original Transmission Reference',\n        0x0269: 'Headline',\n        0x026e: 'Credit',\n        0x0273: 'Source',\n        0x0274: 'Copyright Notice',\n        0x0276: {\n            'name': 'Contact',\n            'repeatable': true\n        },\n        0x0278: 'Caption/Abstract',\n        0x027a: {\n            'name': 'Writer/Editor',\n            'repeatable': true\n        },\n        0x027d: {\n            'name': 'Rasterized Caption',\n            'description': (value) => value\n        },\n        0x0282: 'Image Type',\n        0x0283: {\n            'name': 'Image Orientation',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === 'P') {\n                    return 'Portrait';\n                } else if (string === 'L') {\n                    return 'Landscape';\n                } else if (string === 'S') {\n                    return 'Square';\n                }\n                return 'Unknown';\n            }\n        },\n        0x0287: 'Language Identifier',\n        0x0296: {\n            'name': 'Audio Type',\n            'description': (value) => {\n                const stringValue = getStringValue(value);\n                const character0 = stringValue.charAt(0);\n                const character1 = stringValue.charAt(1);\n                let description = '';\n\n                if (character0 === '1') {\n                    description += 'Mono';\n                } else if (character0 === '2') {\n                    description += 'Stereo';\n                }\n\n                if (character1 === 'A') {\n                    description += ', actuality';\n                } else if (character1 === 'C') {\n                    description += ', question and answer session';\n                } else if (character1 === 'M') {\n                    description += ', music, transmitted by itself';\n                } else if (character1 === 'Q') {\n                    description += ', response to a question';\n                } else if (character1 === 'R') {\n                    description += ', raw sound';\n                } else if (character1 === 'S') {\n                    description += ', scener';\n                } else if (character1 === 'V') {\n                    description += ', voicer';\n                } else if (character1 === 'W') {\n                    description += ', wrap';\n                }\n\n                if (description !== '') {\n                    return description;\n                }\n                return stringValue;\n            }\n        },\n        0x0297: {\n            'name': 'Audio Sampling Rate',\n            'description': (value) => parseInt(getStringValue(value), 10) + ' Hz'\n        },\n        0x0298: {\n            'name': 'Audio Sampling Resolution',\n            'description': (value) => {\n                const bits = parseInt(getStringValue(value), 10);\n                return bits + (bits === 1 ? ' bit' : ' bits');\n            }\n        },\n        0x0299: {\n            'name': 'Audio Duration',\n            'description': (value) => {\n                const duration = getStringValue(value);\n                if (duration.length >= 6) {\n                    return duration.substr(0, 2) + ':' + duration.substr(2, 2) + ':' + duration.substr(4, 2);\n                }\n                return duration;\n            }\n        },\n        0x029a: 'Audio Outcue',\n        0x02c8: {\n            'name': 'ObjectData Preview File Format',\n            'description': (value) => {\n                const stringValue = getStringValue(value);\n                if (stringValue === '00') {\n                    return 'No ObjectData';\n                } else if (stringValue === '01') {\n                    return 'IPTC-NAA Digital Newsphoto Parameter Record';\n                } else if (stringValue === '02') {\n                    return 'IPTC7901 Recommended Message Format';\n                } else if (stringValue === '03') {\n                    return 'Tagged Image File Format (Adobe/Aldus Image data)';\n                } else if (stringValue === '04') {\n                    return 'Illustrator (Adobe Graphics data)';\n                } else if (stringValue === '05') {\n                    return 'AppleSingle (Apple Computer Inc)';\n                } else if (stringValue === '06') {\n                    return 'NAA 89-3 (ANPA 1312)';\n                } else if (stringValue === '07') {\n                    return 'MacBinary II';\n                } else if (stringValue === '08') {\n                    return 'IPTC Unstructured Character Oriented File Format (UCOFF)';\n                } else if (stringValue === '09') {\n                    return 'United Press International ANPA 1312 variant';\n                } else if (stringValue === '10') {\n                    return 'United Press International Down-Load Message';\n                } else if (stringValue === '11') {\n                    return 'JPEG File Interchange (JFIF)';\n                } else if (stringValue === '12') {\n                    return 'Photo-CD Image-Pac (Eastman Kodak)';\n                } else if (stringValue === '13') {\n                    return 'Microsoft Bit Mapped Graphics File [*.BMP]';\n                } else if (stringValue === '14') {\n                    return 'Digital Audio File [*.WAV] (Microsoft & Creative Labs)';\n                } else if (stringValue === '15') {\n                    return 'Audio plus Moving Video [*.AVI] (Microsoft)';\n                } else if (stringValue === '16') {\n                    return 'PC DOS/Windows Executable Files [*.COM][*.EXE]';\n                } else if (stringValue === '17') {\n                    return 'Compressed Binary File [*.ZIP] (PKWare Inc)';\n                } else if (stringValue === '18') {\n                    return 'Audio Interchange File Format AIFF (Apple Computer Inc)';\n                } else if (stringValue === '19') {\n                    return 'RIFF Wave (Microsoft Corporation)';\n                } else if (stringValue === '20') {\n                    return 'Freehand (Macromedia/Aldus)';\n                } else if (stringValue === '21') {\n                    return 'Hypertext Markup Language \"HTML\" (The Internet Society)';\n                } else if (stringValue === '22') {\n                    return 'MPEG 2 Audio Layer 2 (Musicom), ISO/IEC';\n                } else if (stringValue === '23') {\n                    return 'MPEG 2 Audio Layer 3, ISO/IEC';\n                } else if (stringValue === '24') {\n                    return 'Portable Document File (*.PDF) Adobe';\n                } else if (stringValue === '25') {\n                    return 'News Industry Text Format (NITF)';\n                } else if (stringValue === '26') {\n                    return 'Tape Archive (*.TAR)';\n                } else if (stringValue === '27') {\n                    return 'Tidningarnas Telegrambyrå NITF version (TTNITF DTD)';\n                } else if (stringValue === '28') {\n                    return 'Ritzaus Bureau NITF version (RBNITF DTD)';\n                } else if (stringValue === '29') {\n                    return 'Corel Draw [*.CDR]';\n                }\n                return 'Unknown format ' + stringValue;\n            }\n        },\n        0x02c9: {\n            'name': 'ObjectData Preview File Format Version',\n            'description': (value, tags) => {\n                // Format ID, Version ID, Version Description\n                const formatVersions = {\n                    '00': {'00': '1'},\n                    '01': {'01': '1', '02': '2', '03': '3', '04': '4'},\n                    '02': {'04': '4'},\n                    '03': {'01': '5.0', '02': '6.0'},\n                    '04': {'01': '1.40'},\n                    '05': {'01': '2'},\n                    '06': {'01': '1'},\n                    '11': {'01': '1.02'},\n                    '20': {'01': '3.1', '02': '4.0', '03': '5.0', '04': '5.5'},\n                    '21': {'02': '2.0'}\n                };\n                const stringValue = getStringValue(value);\n\n                if (tags['ObjectData Preview File Format']) {\n                    const objectDataPreviewFileFormat = getStringValue(tags['ObjectData Preview File Format'].value);\n                    if (formatVersions[objectDataPreviewFileFormat]\n                        && formatVersions[objectDataPreviewFileFormat][stringValue]) {\n                        return formatVersions[objectDataPreviewFileFormat][stringValue];\n                    }\n                }\n\n                return stringValue;\n            }\n        },\n        0x02ca: 'ObjectData Preview Data'\n    }\n};\n\nfunction getCreationDate(value) {\n    const date = getStringValue(value);\n\n    if (date.length >= 8) {\n        return date.substr(0, 4) + '-' + date.substr(4, 2) + '-' + date.substr(6, 2);\n    }\n\n    return date;\n}\n\nfunction getCreationTime(value) {\n    const time = getStringValue(value);\n    let parsedTime = time;\n\n    if (time.length >= 6) {\n        parsedTime = time.substr(0, 2) + ':' + time.substr(2, 2) + ':' + time.substr(4, 2);\n        if (time.length === 11) {\n            parsedTime += time.substr(6, 1) + time.substr(7, 2) + ':' + time.substr(9, 2);\n        }\n    }\n\n    return parsedTime;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport IptcTagNames from './iptc-tag-names';\n\nconst BYTES_8BIM = 0x3842494d;\nconst BYTES_8BIM_SIZE = 4;\nconst RESOURCE_BLOCK_HEADER_SIZE = BYTES_8BIM_SIZE + 8;\nconst NAA_RESOURCE_BLOCK_TYPE = 0x0404;\nconst TAG_HEADER_SIZE = 5;\n\nexport default {\n    read\n};\n\nfunction read(dataView, dataOffset) {\n    try {\n        const {naaBlock, dataOffset: newDataOffset} = getNaaResourceBlock(dataView, dataOffset);\n        return parseTags(dataView, naaBlock, newDataOffset);\n    } catch (error) {\n        return {};\n    }\n}\n\nfunction getNaaResourceBlock(dataView, dataOffset) {\n    while (dataOffset + RESOURCE_BLOCK_HEADER_SIZE <= dataView.byteLength) {\n        const resourceBlock = getResourceBlock(dataView, dataOffset);\n        if (isNaaResourceBlock(resourceBlock)) {\n            return {naaBlock: resourceBlock, dataOffset};\n        }\n        dataOffset += RESOURCE_BLOCK_HEADER_SIZE + resourceBlock.size + getBlockPadding(resourceBlock);\n    }\n    throw new Error('No IPTC NAA resource block.');\n}\n\nfunction getResourceBlock(dataView, dataOffset) {\n    const RESOURCE_BLOCK_SIZE_OFFSET = 10;\n\n    if (dataView.getUint32(dataOffset, false) !== BYTES_8BIM) {\n        throw new Error('Not an IPTC resource block.');\n    }\n\n    return {\n        type: dataView.getUint16(dataOffset + BYTES_8BIM_SIZE, false),\n        size: dataView.getUint16(dataOffset + RESOURCE_BLOCK_SIZE_OFFSET, false)\n    };\n}\n\nfunction isNaaResourceBlock(resourceBlock) {\n    return resourceBlock.type === NAA_RESOURCE_BLOCK_TYPE;\n}\n\nfunction getBlockPadding(resourceBlock) {\n    if (resourceBlock.size % 2 !== 0) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction parseTags(dataView, naaBlock, dataOffset) {\n    const tags = {};\n\n    dataOffset += RESOURCE_BLOCK_HEADER_SIZE;\n    const endOfBlockOffset = dataOffset + naaBlock['size'];\n\n    while ((dataOffset < endOfBlockOffset) && (dataOffset < dataView.byteLength)) {\n        const {tag, tagSize} = readTag(dataView, dataOffset, tags);\n\n        if ((tags[tag.name] === undefined) || (tag['repeatable'] === undefined)) {\n            tags[tag.name] = {\n                value: tag.value,\n                description: tag.description\n            };\n        } else {\n            if (!(tags[tag.name] instanceof Array)) {\n                tags[tag.name] = [{\n                    value: tags[tag.name].value,\n                    description: tags[tag.name].description\n                }];\n            }\n            tags[tag.name].push({\n                value: tag.value,\n                description: tag.description\n            });\n        }\n\n        dataOffset += TAG_HEADER_SIZE + tagSize;\n    }\n\n    return tags;\n}\n\nfunction readTag(dataView, dataOffset, tags) {\n    const TAG_CODE_OFFSET = 1;\n    const TAG_SIZE_OFFSET = 3;\n\n    const tagCode = dataView.getUint16(dataOffset + TAG_CODE_OFFSET, false);\n    const tagSize = dataView.getUint16(dataOffset + TAG_SIZE_OFFSET, false);\n    const tagValue = getTagValue(dataView, dataOffset + TAG_HEADER_SIZE, tagSize);\n    let tag;\n\n    if (IptcTagNames['iptc'][tagCode] !== undefined) {\n        let tagName, tagDescription;\n\n        if ((IptcTagNames['iptc'][tagCode]['name'] !== undefined)\n            && (IptcTagNames['iptc'][tagCode]['description'] !== undefined)) {\n            tagName = IptcTagNames['iptc'][tagCode]['name'];\n            tagDescription = IptcTagNames['iptc'][tagCode]['description'](tagValue, tags);\n        } else {\n            if (IptcTagNames['iptc'][tagCode]['name'] !== undefined) {\n                tagName = IptcTagNames['iptc'][tagCode]['name'];\n            } else {\n                tagName = IptcTagNames['iptc'][tagCode];\n            }\n            if (tagValue instanceof Array) {\n                tagDescription = tagValue.map((charCode) => String.fromCharCode(charCode)).join('');\n                tagDescription = decodeAsciiValue(tagDescription);\n            } else {\n                tagDescription = tagValue;\n            }\n        }\n        tag = {\n            name: tagName,\n            value: tagValue,\n            description: tagDescription\n        };\n        if (IptcTagNames['iptc'][tagCode]['repeatable'] !== undefined) {\n            tag['repeatable'] = true;\n        }\n    } else {\n        tag = {\n            name: `undefined-${tagCode}`,\n            value: tagValue,\n            description: tagValue\n        };\n    }\n\n    return {tag, tagSize};\n}\n\nfunction getTagValue(dataView, offset, size) {\n    const value = [];\n\n    for (let valueIndex = 0; valueIndex < size; valueIndex++) {\n        value.push(dataView.getUint8(offset + valueIndex));\n    }\n\n    return value;\n}\n\nfunction decodeAsciiValue(asciiValue) {\n    try {\n        return decodeURIComponent(escape(asciiValue));\n    } catch (error) {\n        return asciiValue;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    0x0001: 'InteroperabilityIndex'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getEncodedString} from './tag-names-utils';\n\nexport default {\n    0x0000: {\n        'name': 'GPSVersionID',\n        'description': (value) => {\n            if (value[0] === 2 && value[1] === 2 && value[2] === 0 && value[3] === 0) {\n                return 'Version 2.2';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0001: {\n        'name': 'GPSLatitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'N') {\n                return 'North latitude';\n            } else if (ref === 'S') {\n                return 'South latitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0002: {\n        'name': 'GPSLatitude',\n        'description': (value) => {\n            return value[0] + value[1] / 60 + value[2] / 3600;\n        }\n    },\n    0x0003: {\n        'name': 'GPSLongitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'E') {\n                return 'East longitude';\n            } else if (ref === 'W') {\n                return 'West longitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0004: {\n        'name': 'GPSLongitude',\n        'description': (value) => {\n            return value[0] + value[1] / 60 + value[2] / 3600;\n        }\n    },\n    0x0005: {\n        'name': 'GPSAltitudeRef',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Sea level';\n            } else if (value === 1) {\n                return 'Sea level reference (negative value)';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0006: {\n        'name': 'GPSAltitude',\n        'description': (value) => {\n            return value + ' m';\n        }\n    },\n    0x0007: {\n        'name': 'GPSTimeStamp',\n        'description': (value) => {\n            return value.map((num) => {\n                if (`${num}`.length === 1) {\n                    return `0${num}`;\n                }\n                return num;\n            }).join(':');\n        }\n    },\n    0x0008: 'GPSSatellites',\n    0x0009: {\n        'name': 'GPSStatus',\n        'description': (value) => {\n            const status = value.join('');\n            if (status === 'A') {\n                return 'Measurement in progress';\n            } else if (status === 'V') {\n                return 'Measurement Interoperability';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000a: {\n        'name': 'GPSMeasureMode',\n        'description': (value) => {\n            const mode = value.join('');\n            if (mode === '2') {\n                return '2-dimensional measurement';\n            } else if (mode === '3') {\n                return '3-dimensional measurement';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000b: 'GPSDOP',\n    0x000c: {\n        'name': 'GPSSpeedRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'K') {\n                return 'Kilometers per hour';\n            } else if (ref === 'M') {\n                return 'Miles per hour';\n            } else if (ref === 'N') {\n                return 'Knots';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000d: 'GPSSpeed',\n    0x000e: {\n        'name': 'GPSTrackRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000f: 'GPSTrack',\n    0x0010: {\n        'name': 'GPSImgDirectionRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0011: 'GPSImgDirection',\n    0x0012: 'GPSMapDatum',\n    0x0013: {\n        'name': 'GPSDestLatitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'N') {\n                return 'North latitude';\n            } else if (ref === 'S') {\n                return 'South latitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0014: {\n        'name': 'GPSDestLatitude',\n        'description': (value) => {\n            return value[0] + value[1] / 60 + value[2] / 3600;\n        }\n    },\n    0x0015: {\n        'name': 'GPSDestLongitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'E') {\n                return 'East longitude';\n            } else if (ref === 'W') {\n                return 'West longitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0016: {\n        'name': 'GPSDestLongitude',\n        'description': (value) => {\n            return value[0] + value[1] / 60 + value[2] / 3600;\n        }\n    },\n    0x0017: {\n        'name': 'GPSDestBearingRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0018: 'GPSDestBearing',\n    0x0019: {\n        'name': 'GPSDestDistanceRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'K') {\n                return 'Kilometers';\n            } else if (ref === 'M') {\n                return 'Miles';\n            } else if (ref === 'N') {\n                return 'Knots';\n            }\n            return 'Unknown';\n        }\n    },\n    0x001a: 'GPSDestDistance',\n    0x001b: {\n        'name': 'GPSProcessingMethod',\n        'description': getEncodedString\n    },\n    0x001c: {\n        'name': 'GPSAreaInformation',\n        'description': getEncodedString\n    },\n    0x001d: 'GPSDateStamp',\n    0x001e: {\n        'name': 'GPSDifferential',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Measurement without differential correction';\n            } else if (value === 1) {\n                return 'Differential correction applied';\n            }\n            return 'Unknown';\n        }\n    }\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue, getEncodedString} from './tag-names-utils';\n\nexport default {\n    0x829a: 'ExposureTime',\n    0x829d: 'FNumber',\n    0x8822: {\n        'name': 'ExposureProgram',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Undefined';\n            } else if (value === 1) {\n                return 'Manual';\n            } else if (value === 2) {\n                return 'Normal program';\n            } else if (value === 3) {\n                return 'Aperture priority';\n            } else if (value === 4) {\n                return 'Shutter priority';\n            } else if (value === 5) {\n                return 'Creative program';\n            } else if (value === 6) {\n                return 'Action program';\n            } else if (value === 7) {\n                return 'Portrait mode';\n            } else if (value === 8) {\n                return 'Landscape mode';\n            }\n            return 'Unknown';\n        }\n    },\n    0x8824: 'SpectralSensitivity',\n    0x8827: 'ISOSpeedRatings',\n    0x8828: {\n        'name': 'OECF',\n        'description': () => '[Raw OECF table data]'\n    },\n    0x9000: {\n        'name': 'ExifVersion',\n        'description': (value) => getStringValue(value)\n    },\n    0x9003: 'DateTimeOriginal',\n    0x9004: 'DateTimeDigitized',\n    0x9101: {\n        'name': 'ComponentsConfiguration',\n        'description': (value) => {\n            return value.map((character) => {\n                if (character === 0x31) {\n                    return 'Y';\n                } else if (character === 0x32) {\n                    return 'Cb';\n                } else if (character === 0x33) {\n                    return 'Cr';\n                } else if (character === 0x34) {\n                    return 'R';\n                } else if (character === 0x35) {\n                    return 'G';\n                } else if (character === 0x36) {\n                    return 'B';\n                }\n            }).join('');\n        }\n    },\n    0x9102: 'CompressedBitsPerPixel',\n    0x9201: 'ShutterSpeedValue',\n    0x9202: 'ApertureValue',\n    0x9203: 'BrightnessValue',\n    0x9204: 'ExposureBiasValue',\n    0x9205: 'MaxApertureValue',\n    0x9206: 'SubjectDistance',\n    0x9207: {\n        'name': 'MeteringMode',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Average';\n            } else if (value === 2) {\n                return 'CenterWeightedAverage';\n            } else if (value === 3) {\n                return 'Spot';\n            } else if (value === 4) {\n                return 'MultiSpot';\n            } else if (value === 5) {\n                return 'Pattern';\n            } else if (value === 6) {\n                return 'Partial';\n            } else if (value === 255) {\n                return 'Other';\n            }\n            return 'Unknown';\n        }\n    },\n    0x9208: {\n        'name': 'LightSource',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Daylight';\n            } else if (value === 2) {\n                return 'Fluorescent';\n            } else if (value === 3) {\n                return 'Tungsten (incandescent light)';\n            } else if (value === 4) {\n                return 'Flash';\n            } else if (value === 9) {\n                return 'Fine weather';\n            } else if (value === 10) {\n                return 'Cloudy weather';\n            } else if (value === 11) {\n                return 'Shade';\n            } else if (value === 12) {\n                return 'Daylight fluorescent (D 5700 – 7100K)';\n            } else if (value === 13) {\n                return 'Day white fluorescent (N 4600 – 5400K)';\n            } else if (value === 14) {\n                return 'Cool white fluorescent (W 3900 – 4500K)';\n            } else if (value === 15) {\n                return 'White fluorescent (WW 3200 – 3700K)';\n            } else if (value === 17) {\n                return 'Standard light A';\n            } else if (value === 18) {\n                return 'Standard light B';\n            } else if (value === 19) {\n                return 'Standard light C';\n            } else if (value === 20) {\n                return 'D55';\n            } else if (value === 21) {\n                return 'D65';\n            } else if (value === 22) {\n                return 'D75';\n            } else if (value === 23) {\n                return 'D50';\n            } else if (value === 24) {\n                return 'ISO studio tungsten';\n            } else if (value === 255) {\n                return 'Other light source';\n            }\n            return 'Unknown';\n        }\n    },\n    0x9209: {\n        'name': 'Flash',\n        'description': (value) => {\n            if (value === 0x00) {\n                return 'Flash did not fire';\n            } else if (value === 0x01) {\n                return 'Flash fired';\n            } else if (value === 0x05) {\n                return 'Strobe return light not detected';\n            } else if (value === 0x07) {\n                return 'Strobe return light detected';\n            } else if (value === 0x09) {\n                return 'Flash fired, compulsory flash mode';\n            } else if (value === 0x0d) {\n                return 'Flash fired, compulsory flash mode, return light not detected';\n            } else if (value === 0x0f) {\n                return 'Flash fired, compulsory flash mode, return light detected';\n            } else if (value === 0x10) {\n                return 'Flash did not fire, compulsory flash mode';\n            } else if (value === 0x18) {\n                return 'Flash did not fire, auto mode';\n            } else if (value === 0x19) {\n                return 'Flash fired, auto mode';\n            } else if (value === 0x1d) {\n                return 'Flash fired, auto mode, return light not detected';\n            } else if (value === 0x1f) {\n                return 'Flash fired, auto mode, return light detected';\n            } else if (value === 0x20) {\n                return 'No flash function';\n            } else if (value === 0x41) {\n                return 'Flash fired, red-eye reduction mode';\n            } else if (value === 0x45) {\n                return 'Flash fired, red-eye reduction mode, return light not detected';\n            } else if (value === 0x47) {\n                return 'Flash fired, red-eye reduction mode, return light detected';\n            } else if (value === 0x49) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode';\n            } else if (value === 0x4d) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected';\n            } else if (value === 0x4f) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light detected';\n            } else if (value === 0x59) {\n                return 'Flash fired, auto mode, red-eye reduction mode';\n            } else if (value === 0x5d) {\n                return 'Flash fired, auto mode, return light not detected, red-eye reduction mode';\n            } else if (value === 0x5f) {\n                return 'Flash fired, auto mode, return light detected, red-eye reduction mode';\n            }\n            return 'Unknown';\n        }\n    },\n    0x920a: 'FocalLength',\n    0x9214: {\n        'name': 'SubjectArea',\n        'description': (value) => {\n            if (value.length === 2) {\n                return `Location; X: ${value[0]}, Y: ${value[1]}`;\n            } else if (value.length === 3) {\n                return `Circle; X: ${value[0]}, Y: ${value[1]}, diameter: ${value[2]}`;\n            } else if (value.length === 4) {\n                return `Rectangle; X: ${value[0]}, Y: ${value[1]}, width: ${value[2]}, height: ${value[3]}`;\n            }\n            return 'Unknown';\n        }\n    },\n    0x927c: {\n        'name': 'MakerNote',\n        'description': () => '[Raw maker note data]'\n    },\n    0x9286: {\n        'name': 'UserComment',\n        'description': getEncodedString\n    },\n    0x9290: 'SubSecTime',\n    0x9291: 'SubSecTimeOriginal',\n    0x9292: 'SubSecTimeDigitized',\n    0xa000: {\n        'name': 'FlashpixVersion',\n        'description': (value) => value.map((charCode) => String.fromCharCode(charCode)).join('')\n    },\n    0xa001: {\n        'name': 'ColorSpace',\n        'description': (value) => {\n            if (value === 1) {\n                return 'sRGB';\n            } else if (value === 0xffff) {\n                return 'Uncalibrated';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa002: 'PixelXDimension',\n    0xa003: 'PixelYDimension',\n    0xa004: 'RelatedSoundFile',\n    0xa005: 'Interoperability IFD Pointer',\n    0xa20b: 'FlashEnergy',\n    0xa20c: {\n        'name': 'SpatialFrequencyResponse',\n        'description': () => '[Raw SFR table data]'\n    },\n    0xa20e: 'FocalPlaneXResolution',\n    0xa20f: 'FocalPlaneYResolution',\n    0xa210: {\n        'name': 'FocalPlaneResolutionUnit',\n        'description': (value) => {\n            if (value === 2) {\n                return 'inches';\n            } else if (value === 3) {\n                return 'centimeters';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa214: {\n        'name': 'SubjectLocation',\n        'description': ([x, y]) => `X: ${x}, Y: ${y}`\n    },\n    0xa215: 'ExposureIndex',\n    0xa217: {\n        'name': 'SensingMethod',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Undefined';\n            } else if (value === 2) {\n                return 'One-chip color area sensor';\n            } else if (value === 3) {\n                return 'Two-chip color area sensor';\n            } else if (value === 4) {\n                return 'Three-chip color area sensor';\n            } else if (value === 5) {\n                return 'Color sequential area sensor';\n            } else if (value === 7) {\n                return 'Trilinear sensor';\n            } else if (value === 8) {\n                return 'Color sequential linear sensor';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa300: {\n        'name': 'FileSource',\n        'description': (value) => {\n            if (value === 3) {\n                return 'DSC';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa301: {\n        'name': 'SceneType',\n        'description': (value) => {\n            if (value === 1) {\n                return 'A directly photographed image';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa302: {\n        'name': 'CFAPattern',\n        'description': () => '[Raw CFA pattern table data]'\n    },\n    0xa401: {\n        'name': 'CustomRendered',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Normal process';\n            } else if (value === 1) {\n                return 'Custom process';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa402: {\n        'name': 'ExposureMode',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Auto exposure';\n            } else if (value === 1) {\n                return 'Manual exposure';\n            } else if (value === 2) {\n                return 'Auto bracket';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa403: {\n        'name': 'WhiteBalance',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Auto white balance';\n            } else if (value === 1) {\n                return 'Manual white balance';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa404: {\n        'name': 'DigitalZoomRatio',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Digital zoom was not used';\n            }\n            return value;\n        }\n    },\n    0xa405: {\n        'name': 'FocalLengthIn35mmFilm',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Unknown';\n            }\n            return value;\n        }\n    },\n    0xa406: {\n        'name': 'SceneCaptureType',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Standard';\n            } else if (value === 1) {\n                return 'Landscape';\n            } else if (value === 2) {\n                return 'Portrait';\n            } else if (value === 3) {\n                return 'Night scene';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa407: {\n        'name': 'GainControl',\n        'description': (value) => {\n            if (value === 0) {\n                return 'None';\n            } else if (value === 1) {\n                return 'Low gain up';\n            } else if (value === 2) {\n                return 'High gain up';\n            } else if (value === 3) {\n                return 'Low gain down';\n            } else if (value === 4) {\n                return 'High gain down';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa408: {\n        'name': 'Contrast',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Normal';\n            } else if (value === 1) {\n                return 'Soft';\n            } else if (value === 2) {\n                return 'Hard';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa409: {\n        'name': 'Saturation',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Normal';\n            } else if (value === 1) {\n                return 'Low saturation';\n            } else if (value === 2) {\n                return 'High saturation';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa40a: {\n        'name': 'Sharpness',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Normal';\n            } else if (value === 1) {\n                return 'Soft';\n            } else if (value === 2) {\n                return 'Hard';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa40b: {\n        'name': 'DeviceSettingDescription',\n        'description': () => '[Raw device settings table data]'\n    },\n    0xa40c: {\n        'name': 'SubjectDistanceRange',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Macro';\n            } else if (value === 2) {\n                return 'Close view';\n            } else if (value === 3) {\n                return 'Distant view';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa420: 'ImageUniqueID'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    0x0100: 'ImageWidth',\n    0x0101: 'ImageLength',\n    0x0102: 'BitsPerSample',\n    0x0103: 'Compression',\n    0x0106: 'PhotometricInterpretation',\n    0x010e: 'ImageDescription',\n    0x010f: 'Make',\n    0x0110: 'Model',\n    0x0111: 'StripOffsets',\n    0x0112: {\n        name: 'Orientation',\n        description: (value) => {\n            if (value === 1) {\n                return 'top-left';\n            }\n            if (value === 2) {\n                return 'top-right';\n            }\n            if (value === 3) {\n                return 'bottom-right';\n            }\n            if (value === 4) {\n                return 'bottom-left';\n            }\n            if (value === 5) {\n                return 'left-top';\n            }\n            if (value === 6) {\n                return 'right-top';\n            }\n            if (value === 7) {\n                return 'right-bottom';\n            }\n            if (value === 8) {\n                return 'left-bottom';\n            }\n            return 'Undefined';\n        }\n    },\n    0x0115: 'SamplesPerPixel',\n    0x0116: 'RowsPerStrip',\n    0x0117: 'StripByteCounts',\n    0x011a: 'XResolution',\n    0x011b: 'YResolution',\n    0x011c: 'PlanarConfiguration',\n    0x0128: {\n        name: 'ResolutionUnit',\n        description: (value) => {\n            if (value === 2) {\n                return 'inches';\n            }\n            if (value === 3) {\n                return 'centimeters';\n            }\n            return 'Unknown';\n        }\n    },\n    0x012d: 'TransferFunction',\n    0x0131: 'Software',\n    0x0132: 'DateTime',\n    0x013b: 'Artist',\n    0x013e: 'WhitePoint',\n    0x013f: 'PrimaryChromaticities',\n    0x0201: 'JPEGInterchangeFormat',\n    0x0202: 'JPEGInterchangeFormatLength',\n    0x0211: 'YCbCrCoefficients',\n    0x0212: 'YCbCrSubSampling',\n    0x0213: {\n        name: 'YCbCrPositioning',\n        description: (value) => {\n            if (value === 1) {\n                return 'centered';\n            }\n            if (value === 2) {\n                return 'co-sited';\n            }\n            return 'undefined ' + value;\n        }\n    },\n    0x0214: 'ReferenceBlackWhite',\n    0x8298: {\n        name: 'Copyright',\n        description: (value) => value.join('; ')\n    },\n    0x8769: 'Exif IFD Pointer',\n    0x8825: 'GPS Info IFD Pointer'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TagNames0thIfd from './tag-names-0th-ifd';\nimport TagNamesExifIfd from './tag-names-exif-ifd';\nimport TagNamesGpsIfd from './tag-names-gps-ifd';\nimport TagNamesInteroperabilityIfd from './tag-names-interoperability-ifd';\n\nexport default {\n    '0th': TagNames0thIfd,\n    'exif': TagNamesExifIfd,\n    'gps': TagNamesGpsIfd,\n    'interoperability': TagNamesInteroperabilityIfd\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport ByteOrder from './byte-order';\n\nconst typeSizes = {\n    1: 1, // BYTE\n    2: 1, // ASCII\n    3: 2, // SHORT\n    4: 4, // LONG\n    5: 8, // RATIONAL\n    7: 1, // UNDEFINED\n    9: 4, // SLONG\n    10: 8 // SRATIONAL\n};\n\nconst tagTypes = {\n    'BYTE': 1,\n    'ASCII': 2,\n    'SHORT': 3,\n    'LONG': 4,\n    'RATIONAL': 5,\n    'UNDEFINED': 7,\n    'SLONG': 9,\n    'SRATIONAL': 10\n};\n\nexport default {\n    getAsciiValue,\n    getByteAt,\n    getAsciiAt,\n    getShortAt,\n    getLongAt,\n    getRationalAt,\n    getUndefinedAt,\n    getSlongAt,\n    getSrationalAt,\n    typeSizes,\n    tagTypes,\n    getTypeSize\n};\n\nfunction getAsciiValue(charArray) {\n    return charArray.map((charCode) => String.fromCharCode(charCode));\n}\n\nfunction getByteAt(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\nfunction getAsciiAt(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\nfunction getShortAt(dataView, offset, byteOrder) {\n    return dataView.getUint16(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getLongAt(dataView, offset, byteOrder) {\n    return dataView.getUint32(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getRationalAt(dataView, offset, byteOrder) {\n    return getLongAt(dataView, offset, byteOrder) / getLongAt(dataView, offset + 4, byteOrder);\n}\n\nfunction getUndefinedAt(dataView, offset) {\n    return getByteAt(dataView, offset);\n}\n\nfunction getSlongAt(dataView, offset, byteOrder) {\n    return dataView.getInt32(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getSrationalAt(dataView, offset, byteOrder) {\n    return getSlongAt(dataView, offset, byteOrder) / getSlongAt(dataView, offset + 4, byteOrder);\n}\n\nfunction getTypeSize(typeName) {\n    if (tagTypes[typeName] === undefined) {\n        throw new Error('No such type found.');\n    }\n\n    return typeSizes[tagTypes[typeName]];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport ByteOrder from './byte-order';\nimport Types from './types';\nimport TagNames from './tag-names';\n\nconst EXIF_IFD_POINTER_KEY = 'Exif IFD Pointer';\nconst GPS_INFO_IFD_POINTER_KEY = 'GPS Info IFD Pointer';\nconst INTEROPERABILITY_IFD_POINTER_KEY = 'Interoperability IFD Pointer';\n\nconst getTagValueAt = {\n    1: Types.getByteAt,\n    2: Types.getAsciiAt,\n    3: Types.getShortAt,\n    4: Types.getLongAt,\n    5: Types.getRationalAt,\n    7: Types.getUndefinedAt,\n    9: Types.getSlongAt,\n    10: Types.getSrationalAt\n};\n\nexport default {\n    read\n};\n\nfunction read(dataView, tiffHeaderOffset) {\n    const byteOrder = ByteOrder.getByteOrder(dataView, tiffHeaderOffset);\n    let tags = read0thIfd(dataView, tiffHeaderOffset, byteOrder);\n    tags = readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder);\n    tags = readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder);\n    tags = readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder);\n\n    return tags;\n}\n\nfunction read0thIfd(dataView, tiffHeaderOffset, byteOrder) {\n    return readIfd(dataView, '0th', tiffHeaderOffset, get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder), byteOrder);\n}\n\nfunction get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder) {\n    return tiffHeaderOffset + Types.getLongAt(dataView, tiffHeaderOffset + 4, byteOrder);\n}\n\nfunction readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder) {\n    if (tags[EXIF_IFD_POINTER_KEY] !== undefined) {\n        return Object.assign(tags, readIfd(dataView, 'exif', tiffHeaderOffset, tiffHeaderOffset + tags[EXIF_IFD_POINTER_KEY].value, byteOrder));\n    }\n\n    return tags;\n}\n\nfunction readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder) {\n    if (tags[GPS_INFO_IFD_POINTER_KEY] !== undefined) {\n        return Object.assign(tags, readIfd(dataView, 'gps', tiffHeaderOffset, tiffHeaderOffset + tags[GPS_INFO_IFD_POINTER_KEY].value, byteOrder));\n    }\n\n    return tags;\n}\n\nfunction readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder) {\n    if (tags[INTEROPERABILITY_IFD_POINTER_KEY] !== undefined) {\n        return Object.assign(tags, readIfd(dataView, 'interoperability', tiffHeaderOffset, tiffHeaderOffset + tags[INTEROPERABILITY_IFD_POINTER_KEY].value, byteOrder));\n    }\n\n    return tags;\n}\n\nfunction readIfd(dataView, ifdType, tiffHeaderOffset, offset, byteOrder) {\n    const FIELD_COUNT_SIZE = Types.getTypeSize('SHORT');\n    const FIELD_SIZE = 12;\n\n    const tags = {};\n    const numberOfFields = Types.getShortAt(dataView, offset, byteOrder);\n\n    offset += FIELD_COUNT_SIZE;\n    for (let fieldIndex = 0; fieldIndex < numberOfFields; fieldIndex++) {\n        const tag = readTag(dataView, ifdType, tiffHeaderOffset, offset, byteOrder);\n        if (tag !== undefined) {\n            tags[tag.name] = {'value': tag.value, 'description': tag.description};\n        }\n        offset += FIELD_SIZE;\n    }\n\n    return tags;\n}\n\nfunction readTag(dataView, ifdType, tiffHeaderOffset, offset, byteOrder) {\n    const TAG_TYPE_OFFSET = Types.getTypeSize('SHORT');\n    const TAG_COUNT_OFFSET = TAG_TYPE_OFFSET + Types.getTypeSize('SHORT');\n    const TAG_VALUE_OFFSET = TAG_COUNT_OFFSET + Types.getTypeSize('LONG');\n\n    const tagCode = Types.getShortAt(dataView, offset, byteOrder);\n    const tagType = Types.getShortAt(dataView, offset + TAG_TYPE_OFFSET, byteOrder);\n    const tagCount = Types.getLongAt(dataView, offset + TAG_COUNT_OFFSET, byteOrder);\n    let tagValue;\n\n    if (Types.typeSizes[tagType] === undefined) {\n        return undefined;\n    }\n\n    if (tagValueFitsInOffsetSlot(tagType, tagCount)) {\n        tagValue = getTagValue(dataView, offset + TAG_VALUE_OFFSET, tagType, tagCount, byteOrder);\n    } else {\n        const tagValueOffset = Types.getLongAt(dataView, offset + TAG_VALUE_OFFSET, byteOrder);\n        if (tagValueFitsInDataView(dataView, tiffHeaderOffset, tagValueOffset, tagType, tagCount)) {\n            tagValue = getTagValue(dataView, tiffHeaderOffset + tagValueOffset, tagType, tagCount, byteOrder);\n        } else {\n            tagValue = '<faulty value>';\n        }\n    }\n\n    if (tagType === Types.tagTypes['ASCII']) {\n        tagValue = splitNullSeparatedAsciiString(tagValue);\n        tagValue = decodeAsciiValue(tagValue);\n    }\n\n    if (TagNames[ifdType][tagCode] !== undefined) {\n        let tagName, tagDescription;\n\n        if ((TagNames[ifdType][tagCode]['name'] !== undefined) && (TagNames[ifdType][tagCode]['description'] !== undefined)) {\n            tagName = TagNames[ifdType][tagCode]['name'];\n            tagDescription = TagNames[ifdType][tagCode]['description'](tagValue);\n        } else {\n            tagName = TagNames[ifdType][tagCode];\n            if (tagValue instanceof Array) {\n                tagDescription = tagValue.join(', ');\n            } else {\n                tagDescription = tagValue;\n            }\n        }\n        return {\n            name: tagName,\n            value: tagValue,\n            description: tagDescription\n        };\n    }\n\n    return {\n        name: `undefined-${tagCode}`,\n        value: tagValue,\n        description: tagValue\n    };\n}\n\nfunction tagValueFitsInOffsetSlot(tagType, tagCount) {\n    return Types.typeSizes[tagType] * tagCount <= Types.getTypeSize('LONG');\n}\n\nfunction getTagValue(dataView, offset, type, count, byteOrder) {\n    let value = [];\n\n    for (let valueIndex = 0; valueIndex < count; valueIndex++) {\n        value.push(getTagValueAt[type](dataView, offset, byteOrder));\n        offset += Types.typeSizes[type];\n    }\n\n    if (type === Types.tagTypes['ASCII']) {\n        value = Types.getAsciiValue(value);\n    } else if (value.length === 1) {\n        value = value[0];\n    }\n\n    return value;\n}\n\nfunction tagValueFitsInDataView(dataView, tiffHeaderOffset, tagValueOffset, tagType, tagCount) {\n    return tiffHeaderOffset + tagValueOffset + Types.typeSizes[tagType] * tagCount <= dataView.byteLength;\n}\n\nfunction splitNullSeparatedAsciiString(string) {\n    const tagValue = [];\n    let i = 0;\n\n    for (const character of string) {\n        if (character === '\\x00') {\n            i++;\n            continue;\n        }\n        if (tagValue[i] === undefined) {\n            tagValue[i] = '';\n        }\n        tagValue[i] += character;\n    }\n\n    return tagValue;\n}\n\nfunction decodeAsciiValue(asciiValue) {\n    try {\n        return asciiValue.map((value) => decodeURIComponent(escape(value)));\n    } catch (error) {\n        return asciiValue;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils';\n\nconst MIN_DATA_BUFFER_LENGTH = 2;\nconst JPEG_ID = 0xffd8;\nconst JPEG_ID_SIZE = 2;\nconst APP_ID_OFFSET = 4;\nconst APP_MARKER_SIZE = 2;\nconst TIFF_HEADER_OFFSET = 10; // From start of APP1 marker.\nconst IPTC_DATA_OFFSET = 18; // From start of APP13 marker.\nconst XMP_DATA_OFFSET = 33; // From start of APP1 marker.\nconst APP0_MARKER = 0xffe0;\nconst APP1_MARKER = 0xffe1;\nconst APP13_MARKER = 0xffed;\nconst APP15_MARKER = 0xffef;\nconst COMMENT_MARKER = 0xfffe;\nconst APP1_EXIF_IDENTIFIER = 'Exif';\nconst APP1_XMP_IDENTIFIER = 'http://ns.adobe.com/xap/1.0/';\nconst APP13_IPTC_IDENTIFIER = 'Photoshop 3.0';\n\nexport default {\n    check,\n    parseAppMarkers\n};\n\nfunction check(dataView) {\n    if ((dataView.byteLength < MIN_DATA_BUFFER_LENGTH) || (dataView.getUint16(0, false) !== JPEG_ID)) {\n        throw new Error('Invalid image format');\n    }\n}\n\nfunction parseAppMarkers(dataView) {\n    let appMarkerPosition = JPEG_ID_SIZE;\n    let fieldLength;\n    let tiffHeaderOffset;\n    let iptcDataOffset;\n    let xmpDataOffset;\n    let xmpFieldLength;\n\n    while (appMarkerPosition + APP_ID_OFFSET + 5 <= dataView.byteLength) {\n        if (isApp1ExifMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n            tiffHeaderOffset = appMarkerPosition + TIFF_HEADER_OFFSET;\n        } else if (isApp1XMPMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n            xmpDataOffset = appMarkerPosition + XMP_DATA_OFFSET;\n            xmpFieldLength = fieldLength - (XMP_DATA_OFFSET - APP_MARKER_SIZE);\n        } else if (isApp13PhotoshopMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n            iptcDataOffset = appMarkerPosition + IPTC_DATA_OFFSET;\n        } else if (isAppMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n        } else {\n            break;\n        }\n        appMarkerPosition += APP_MARKER_SIZE + fieldLength;\n    }\n\n    return {\n        hasAppMarkers: appMarkerPosition > JPEG_ID_SIZE,\n        tiffHeaderOffset,\n        iptcDataOffset,\n        xmpDataOffset,\n        xmpFieldLength\n    };\n}\n\nfunction isApp1ExifMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_EXIF_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition, false) === APP1_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_EXIF_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength, false) === 0x00);\n}\n\nfunction isApp1XMPMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_XMP_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition, false) === APP1_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_XMP_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength, false) === 0x00);\n}\n\nfunction isApp13PhotoshopMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP13_IPTC_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition, false) === APP13_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP13_IPTC_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength, false) === 0x00);\n}\n\nfunction isAppMarker(dataView, appMarkerPosition) {\n    const appMarker = dataView.getUint16(appMarkerPosition, false);\n    return ((appMarker >= APP0_MARKER) && (appMarker <= APP15_MARKER))\n        || (appMarker === COMMENT_MARKER);\n}\n","/**\n * ExifReader\n * http://github.com/mattiasw/exifreader\n * Copyright (C) 2011-2018  Mattias Wallander <mattias@wallander.eu>\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport ImageHeader from './image-header';\nimport Tags from './tags';\nimport IptcTags from './iptc-tags';\nimport XmpTags from './xmp-tags';\nimport exifErrors from './errors';\n\nexport default {\n    load,\n    loadView,\n    errors: exifErrors,\n};\n\nexport function load(data, options = {expanded: false}) {\n    let dataView;\n\n    try {\n        dataView = new DataView(data);\n    } catch (error) {\n        console.warn('Warning: A full DataView implementation is not available. If you\\'re using Node.js you probably want to do this:\\n  1. Install a DataView polyfill, e.g. jdataview: npm install --save jdataview\\n  2. Require that at the top of your script: global.DataView = require(\\'jdataview\\');\\nSee an example of this in the ExifReader example directory.'); // eslint-disable-line no-console\n        return {};\n    }\n\n    return loadView(dataView, options);\n}\n\nexport function loadView(dataView, options = {expanded: false}) {\n    let foundMetaData = false;\n    let tags = {};\n\n    ImageHeader.check(dataView);\n    const {tiffHeaderOffset, iptcDataOffset, xmpDataOffset, xmpFieldLength} = ImageHeader.parseAppMarkers(dataView);\n\n    if (hasExifData(tiffHeaderOffset)) {\n        foundMetaData = true;\n        const readTags = Tags.read(dataView, tiffHeaderOffset);\n        if (options.expanded) {\n            tags.exif = readTags;\n        } else {\n            tags = Object.assign({}, tags, readTags);\n        }\n    }\n    if (hasIptcData(iptcDataOffset)) {\n        foundMetaData = true;\n        const readTags = IptcTags.read(dataView, iptcDataOffset);\n        if (options.expanded) {\n            tags.iptc = readTags;\n        } else {\n            tags = Object.assign({}, tags, readTags);\n        }\n    }\n    if (hasXmpData(xmpDataOffset)) {\n        foundMetaData = true;\n        const readTags = XmpTags.read(dataView, xmpDataOffset, xmpFieldLength);\n        if (options.expanded) {\n            tags.xmp = readTags;\n        } else {\n            tags = Object.assign({}, tags, readTags);\n        }\n    }\n    if (!foundMetaData) {\n        throw new exifErrors.MetadataMissingError();\n    }\n\n    return tags;\n}\n\nfunction hasExifData(tiffHeaderOffset) {\n    return tiffHeaderOffset !== undefined;\n}\n\nfunction hasIptcData(iptcDataOffset) {\n    return iptcDataOffset !== undefined;\n}\n\nfunction hasXmpData(xmpDataOffset) {\n    return xmpDataOffset !== undefined;\n}\n"],"sourceRoot":""}